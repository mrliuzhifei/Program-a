C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD_USER
OBJECT MODULE PLACED IN .\Output\LCD_User.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\..\..\UserCode\User\src\LCD_User.c LARGE OPTIMIZE(7,SPEED) BROWSE INC
                    -DIR(..\..\..\UserCode\Device\Include;..\..\..\UserCode\StdDriver\inc;..\..\..\UserCode\User\ins;..\..\..\UserCode\StdDri
                    -ver\src;..\..\..\UserCode\StdDriver\lib) DEBUG OBJECTEXTEND PRINT(.\LST\LCD_User.lst) TABS(2) OBJECT(.\Output\LCD_User.o
                    -bj)

line level    source

   1          #include "ML51.h"
   2          uint16_t disvlue;
   3          //#define TEST_LCD
   4          void Init_Lcd(void)
   5          {
   6   1        /*TSLiu */
   7   1        /* Enable COM pin MFP */
   8   1      
   9   1        MFP_P41_LCD_COM2; //Ó²ï¿½ï¿½ï¿½Óµï¿½ï¿½ï¿½COM2
  10   1        MFP_P40_LCD_COM3; //Ó²ï¿½ï¿½ï¿½Óµï¿½ï¿½ï¿½COM3
  11   1        MFP_P47_LCD_COM0;
  12   1        MFP_P33_LCD_COM1;
  13   1        // MFP_P45_LCD_COM4;  //Ó²ï¿½ï¿½ï¿½Óµï¿½ï¿½ï¿½COM0
  14   1        // MFP_P44_LCD_COM5;  //Ó²ï¿½ï¿½ï¿½Óµï¿½ï¿½ï¿½COM1
  15   1        /* Enable SEG pin MFP */
  16   1        MFP_P06_LCD_SEG0;
  17   1        MFP_P07_LCD_SEG1;
  18   1        MFP_P34_LCD_SEG2;
  19   1        MFP_P35_LCD_SEG3;
  20   1        MFP_P20_LCD_SEG4;
  21   1        // MFP_P21_LCD_SEG5;
  22   1        MFP_P26_LCD_SEG6;
  23   1        MFP_P27_LCD_SEG7;
  24   1        MFP_P64_LCD_SEG8;
  25   1        MFP_P65_LCD_SEG9;
  26   1        MFP_P66_LCD_SEG10;
  27   1        MFP_P67_LCD_SEG11;
  28   1        MFP_P30_LCD_SEG12;
  29   1        MFP_P31_LCD_SEG13;
  30   1        MFP_P32_LCD_SEG14;
  31   1        // MFP_P33_LCD_SEG15;
  32   1        // MFP_P47_LCD_SEG16;
  33   1        MFP_P44_LCD_SEG30;
  34   1        MFP_P45_LCD_SEG31;
  35   1        MFP_P46_LCD_SEG17;
  36   1        MFP_P17_LCD_SEG18;
  37   1        MFP_P16_LCD_SEG19;
  38   1        MFP_P15_LCD_SEG20;
  39   1        MFP_P14_LCD_SEG21;
  40   1        MFP_P60_LCD_SEG22;
  41   1        MFP_P61_LCD_SEG23;
  42   1        MFP_P62_LCD_SEG24; //Ó²ï¿½ï¿½ï¿½Óµï¿½ï¿½ï¿½SEG5
  43   1      
  44   1        LCD_Clock_Setting(LIRC, LCD_FREQ_DIV4);
  45   1        LCD_Open(TYPE_B, AVDD_PIN, LCD_CPVOL_3_4V, BIAS_1_3, LCD_4COM);
  46   1        LCD_Current_Mode(Buffer_Mode, TurnOn_All);
  47   1        // LCD_Blink(Enable,3);
  48   1        LCD_Enable();
  49   1        LCD_SetAllPixels(Enable);
  50   1        // printf("\n LCDINIT OK!");
  51   1      }
  52          
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 2   

  53          void Lcd_Display(void)
  54          {
  55   1        LCD_SetAllPixels(Disable);
  56   1        // LCD_SetOnePixel(LCD_COM0, SEG_CO2, Enable);         //ï¿½ï¿½ï¿½ï¿½CO2Í¼ï¿½ï¿½
  57   1      }
  58          
  59          void ShowDigit(UINT8 digitPlace, UINT8 num, UINT8 tempUnit)
  60          {
  61   1      
  62   1        UINT8 segABCD = 0;
  63   1      
  64   1        UINT8 segEFG = 0;
  65   1      
  66   1        // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½?
  67   1      
  68   1        // if ((digitPlace < 1 || digitPlace > 3) ||
  69   1      
  70   1        //   (num > 9)) {
  71   1      
  72   1        // return;
  73   1      
  74   1        // ï¿½ï¿½ï¿½ï¿½Êµï¿½Êµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ó£ï¿½ï¿½Ô¼ï¿½LCDÄ£ï¿½ï¿½Ä¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È·ï¿½ï¿½ï¿½Ä±ï¿
             -½ï¿½ï¿½Ð©SEGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  75   1      
  76   1        // Ã¿ï¿½ï¿½SEGï¿½ï¿½Ò»ï¿½ï¿½8Î»ï¿½ï¿½ï¿½Ý£ï¿½1/4DutyÊ±ï¿½ï¿½ï¿½ï¿½4Î»ï¿½ï¿½Ê¹ï¿½Ã£ï¿½ï¿½ï¿½4Î»ï¿½ï¿½ï¿½ï¿
             -½ï¿½Ý¾ï¿½ï¿½Ç¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½COM1-4ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  77   1      
  78   1        switch (digitPlace)
  79   1        {
  80   2        case 1:
  81   2          segABCD = 2;
  82   2          segEFG = 1;
  83   2          break;
  84   2      
  85   2        case 2:
  86   2          segABCD = 4;
  87   2          segEFG = 3;
  88   2          break;
  89   2      
  90   2        case 3:
  91   2          segABCD = 6;
  92   2          segEFG = 24;
  93   2          break;
  94   2      
  95   2        case 4:
  96   2          segABCD = 8;
  97   2          segEFG = 7;
  98   2          break;
  99   2        case 5:
 100   2          segABCD = 11;
 101   2          segEFG = 10;
 102   2          break;
 103   2        case 6:
 104   2          segABCD = 13;
 105   2          segEFG = 12;
 106   2          break;
 107   2        case 7:
 108   2          // segABCD = 15;
 109   2          segABCD = 30;
 110   2          segEFG = 14;
 111   2          break;
 112   2        case 8:
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 3   

 113   2          segABCD = 18;
 114   2          segEFG = 17;
 115   2          break;
 116   2      
 117   2        case 9:
 118   2          segABCD = 20;
 119   2          segEFG = 19;
 120   2          break;
 121   2        case 10:
 122   2          segEFG = 10;
 123   2          break;
 124   2        case 11:
 125   2          segEFG = 17;
 126   2          break;
 127   2        default:
 128   2      
 129   2          break;
 130   2        }
 131   1      
 132   1        // È·ï¿½ï¿½ï¿½ï¿½SEGï¿½Ôºó£¬¿ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½(ï¿½ï¿½Êµï¿½ï¿½ï¿½ï¿½È«ï¿½ï
             -¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½codeï¿½ï¿½ï¿½ï¿½ï¿½ï¼´ï¿½ï¿½)
 133   1      
 134   1        // ï¿½ï¿½ï¿½ï¿½ABCDï¿½ï¿½ï¿½ï¿½ï¿½ï¿½(COM0-A,COM1-B,COM2-C,COM3-D)
 135   1        SFRS = 3;
 136   1        LCDPTR = segABCD;
 137   1      
 138   1        switch (num)
 139   1        {
 140   2        case 0:
 141   2          LCDDAT = LCD_COM0 | LCD_COM1 | LCD_COM2 | LCD_COM3;
 142   2          break;
 143   2        case 1:
 144   2      
 145   2          LCDDAT = LCD_COM1 | LCD_COM2;
 146   2          break;
 147   2        case 2:
 148   2          LCDDAT = LCD_COM0 | LCD_COM1 | LCD_COM3;
 149   2          break;
 150   2        case 3:
 151   2          LCDDAT = LCD_COM0 | LCD_COM1 | LCD_COM2 | LCD_COM3;
 152   2          break;
 153   2        case 4:
 154   2          LCDDAT = LCD_COM1 | LCD_COM2;
 155   2          break;
 156   2        case 5:
 157   2          LCDDAT = LCD_COM0 | LCD_COM2 | LCD_COM3;
 158   2          break;
 159   2        case 6:
 160   2          LCDDAT = LCD_COM0 | LCD_COM2 | LCD_COM3;
 161   2          break;
 162   2        case 7:
 163   2          LCDDAT = LCD_COM0 | LCD_COM1 | LCD_COM2;
 164   2          break;
 165   2        case 8:
 166   2          LCDDAT = LCD_COM0 | LCD_COM1 | LCD_COM2 | LCD_COM3;
 167   2          break;
 168   2        case 9:
 169   2          LCDDAT = LCD_COM0 | LCD_COM1 | LCD_COM2 | LCD_COM3;
 170   2          break;
 171   2      
 172   2        default:
 173   2      
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 4   

 174   2          break;
 175   2        }
 176   1      
 177   1        // ï¿½ï¿½ï¿½ï¿½EFGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½(COM1-F,COM2-G,COM3-E)
 178   1      
 179   1        SFRS = 3;
 180   1        LCDPTR = segEFG;
 181   1      
 182   1        switch (num)
 183   1      
 184   1        {
 185   2        case 0:
 186   2          LCDDAT = LCD_COM1 | LCD_COM3;
 187   2          break;
 188   2        case 1:
 189   2          LCDDAT &= 0x00;
 190   2          break;
 191   2        case 2:
 192   2          LCDDAT = LCD_COM2 | LCD_COM3;
 193   2          break;
 194   2        case 3:
 195   2          LCDDAT = LCD_COM2;
 196   2          break;
 197   2        case 4:
 198   2          LCDDAT = LCD_COM1 | LCD_COM2;
 199   2          break;
 200   2        case 5:
 201   2          LCDDAT = LCD_COM1 | LCD_COM2;
 202   2          break;
 203   2        case 6:
 204   2          LCDDAT = LCD_COM1 | LCD_COM2 | LCD_COM3;
 205   2          break;
 206   2        case 7:
 207   2          LCDDAT = 0x00;
 208   2          break;
 209   2        case 8:
 210   2          LCDDAT = LCD_COM1 | LCD_COM2 | LCD_COM3;
 211   2          break;
 212   2        case 9:
 213   2          LCDDAT = LCD_COM1 | LCD_COM2;
 214   2          break;
 215   2        default:
 216   2      
 217   2          break;
 218   2        }
 219   1      
 220   1        // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¶È·ï¿½ï¿½Å¶ï¿½ï¿½ï¿½ï¿½ï¿½(COM0-SEG0,2,4)
 221   1      
 222   1        // ×¢ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Òªï¿½Ã»ï¿½ï¿½ï¿½ï¿½?ï¿½ï¿½È»ï¿½á¸²ï¿½ï¿½Ö®Ç°ï¿½ï¿½ï¿½ÃºÃµï¿½ï¿½ï¿½ï¿½Ö²ï¿½ï¿½ÖµÄ¶ï
             -¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 223   1      
 224   1        switch (tempUnit)
 225   1      
 226   1        {
 227   2      
 228   2          /* case 0xC:
 229   2             SFRS = 3;
 230   2             LCDPTR  = 31; // 4Aï¿½ï¿½ set
 231   2      
 232   2             LCDDAT |= LCD_COM2|LCD_COM3;
 233   2      
 234   2             LCDPTR  = 14; // 4Dï¿½ï¿½ set
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 5   

 235   2      
 236   2             LCDDAT |= LCD_COM0;
 237   2      
 238   2             //LCDPTR  = 0; // 4Gï¿½ï¿½ clear
 239   2      
 240   2             //LCDDAT &= ~COM0;
 241   2      
 242   2             break;
 243   2      
 244   2           case 0xF:
 245   2      
 246   2             LCDPTR  = 2; // 4Aï¿½ï¿½ set
 247   2      
 248   2             LCDDAT |= LCD_COM0;
 249   2      
 250   2             LCDPTR  = 4; // 4Dï¿½ï¿½ clear
 251   2      
 252   2             LCDDAT &= ~LCD_COM0;
 253   2      
 254   2             LCDPTR  = 0; // 4Gï¿½ï¿½ set
 255   2      
 256   2             LCDDAT |= LCD_COM0;
 257   2      
 258   2             break;
 259   2      
 260   2           default:
 261   2      
 262   2      
 263   2      
 264   2             break;*/
 265   2        }
 266   1      }
 267          
 268          void TempHub_Display_Off(void)
 269          {
 270   1      
 271   1        LCD_SetOnePixel(0, 9, Disable);
 272   1        LCD_SetOnePixel(0, 21, Disable);
 273   1        LCD_SetOnePixel(1, 21, Disable);
 274   1        LCD_SetOnePixel(0, 31, Disable);
 275   1        LCD_SetOnePixel(1, 31, Disable);
 276   1      
 277   1        LCD_SetOnePixel(2, 31, Disable);
 278   1        LCD_SetOnePixel(3, 31, Disable);
 279   1        //LCD_SetOnePixel(0, 23, Disable);
 280   1        LCD_SetOnePixel(0, 25, Disable);
 281   1      
 282   1        LCD_SetOnePixel(0, 10, Disable);
 283   1        LCD_SetOnePixel(1, 10, Disable);
 284   1        LCD_SetOnePixel(2, 10, Disable);
 285   1        LCD_SetOnePixel(3, 10, Disable);
 286   1      
 287   1        LCD_SetOnePixel(0, 11, Disable);
 288   1        LCD_SetOnePixel(1, 11, Disable);
 289   1        LCD_SetOnePixel(2, 11, Disable);
 290   1        LCD_SetOnePixel(3, 11, Disable);
 291   1      
 292   1        LCD_SetOnePixel(0, 12, Disable);
 293   1        LCD_SetOnePixel(1, 12, Disable);
 294   1        LCD_SetOnePixel(2, 12, Disable);
 295   1        LCD_SetOnePixel(3, 12, Disable);
 296   1      
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 6   

 297   1        LCD_SetOnePixel(0, 13, Disable);
 298   1        LCD_SetOnePixel(1, 13, Disable);
 299   1        LCD_SetOnePixel(2, 13, Disable);
 300   1        LCD_SetOnePixel(3, 13, Disable);
 301   1      
 302   1        LCD_SetOnePixel(0, 14, Disable);
 303   1        LCD_SetOnePixel(1, 14, Disable);
 304   1        LCD_SetOnePixel(2, 14, Disable);
 305   1        LCD_SetOnePixel(3, 14, Disable);
 306   1      
 307   1        LCD_SetOnePixel(0, 30, Disable);
 308   1        LCD_SetOnePixel(1, 30, Disable);
 309   1        LCD_SetOnePixel(2, 30, Disable);
 310   1        LCD_SetOnePixel(3, 30, Disable);
 311   1      
 312   1        LCD_SetOnePixel(0, 17, Disable);
 313   1        LCD_SetOnePixel(1, 17, Disable);
 314   1        LCD_SetOnePixel(2, 17, Disable);
 315   1        LCD_SetOnePixel(3, 17, Disable);
 316   1      
 317   1        LCD_SetOnePixel(0, 18, Disable);
 318   1        LCD_SetOnePixel(1, 18, Disable);
 319   1        LCD_SetOnePixel(2, 18, Disable);
 320   1        LCD_SetOnePixel(3, 18, Disable);
 321   1      
 322   1        LCD_SetOnePixel(0, 19, Disable);
 323   1        LCD_SetOnePixel(1, 19, Disable);
 324   1        LCD_SetOnePixel(2, 19, Disable);
 325   1        LCD_SetOnePixel(3, 19, Disable);
 326   1      
 327   1        LCD_SetOnePixel(0, 20, Disable);
 328   1        LCD_SetOnePixel(1, 20, Disable);
 329   1        LCD_SetOnePixel(2, 20, Disable);
 330   1        LCD_SetOnePixel(3, 20, Disable);
 331   1      }
 332          
 333          void TempHub_Display_On(uint16_t TValue, uint16_t HValue)
 334          {
 335   1        unsigned char tgw, tsw, tbw, tqw, hgw, hsw, hbw; //ï¿½ï¿½,segAg,segFg,segAs,segFs,segAb,segFb,segFq;
 336   1        unsigned char F_PositFlag = 0;
 337   1        if (Get_Unit_Sta() == Unit_C)
 338   1        {
 339   2        }
 340   1        else if (Get_Unit_Sta() == Unit_F)
 341   1        {
 342   2      
 343   2          if (Get_TempPositive() == False)
 344   2          {
 345   3            if (TValue * 1.8 > 320)
 346   3            {
 347   4              F_PositFlag = 1;
 348   4              TValue = TValue * 1.8 - 320;
 349   4              // LCD_SetOnePixel(0,12, Enable);
 350   4            }
 351   3            else
 352   3            {
 353   4              F_PositFlag = 0;
 354   4              TValue = 320 - TValue * 1.8;
 355   4              // Set_TempPositive();//ï¿½ï¿½ï¿½ï¿½ï¿½Â¶ï¿½Îªï¿½ï¿½ï¿½Â¶ï¿½
 356   4            }
 357   3          }
 358   2          else
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 7   

 359   2          {
 360   3            F_PositFlag = 0;
 361   3            TValue = TValue * 1.8 + 320;
 362   3          }
 363   2        }
 364   1        tqw = TValue / 1000;
 365   1        tbw = TValue % 1000 / 100;
 366   1        tsw = TValue % 100 / 10;
 367   1        tgw = TValue % 10;
 368   1      
 369   1        hbw = HValue / 100;
 370   1        hsw = HValue % 100 / 10;
 371   1        hgw = HValue % 10;
 372   1        ShowDigit(7, tgw, 0XC);
 373   1        ShowDigit(6, tsw, 0XC);
 374   1        if (Get_Unit_Sta() == Unit_C)
 375   1        {
 376   2          if (Get_TempPositive() == False)
 377   2          {
 378   3            if (TValue < 100)
 379   3            {
 380   4              LCD_SetOnePixel(2, 10, Enable);
 381   4              LCD_SetOnePixel(0, 12, Disable);
 382   4            }
 383   3            else
 384   3            {
 385   4              LCD_SetOnePixel(0, 12, Enable);
 386   4              LCD_SetOnePixel(2, 10, Disable);
 387   4            }
 388   3          }
 389   2          LCD_SetOnePixel(0, 14, Enable); //Ð¡ï¿½ï¿½ï¿½ï¿½
 390   2          LCD_SetOnePixel(2, 31, Enable);
 391   2          LCD_SetOnePixel(3, 31, Enable);
 392   2          LCD_SetOnePixel(1, 31, Disable);
 393   2        }
 394   1        else
 395   1        {
 396   2          if (F_PositFlag == 1)
 397   2          {
 398   3            if (TValue < 100)
 399   3            {
 400   4              LCD_SetOnePixel(2, 10, Enable);
 401   4              LCD_SetOnePixel(0, 12, Disable);
 402   4            }
 403   3            else
 404   3            {
 405   4              LCD_SetOnePixel(0, 12, Enable);
 406   4              LCD_SetOnePixel(2, 10, Disable);
 407   4            }
 408   3          }
 409   2          LCD_SetOnePixel(0, 14, Enable); //Ð¡ï¿½ï¿½ï¿½ï¿½
 410   2          LCD_SetOnePixel(2, 31, Enable);
 411   2          LCD_SetOnePixel(1, 31, Enable);
 412   2          LCD_SetOnePixel(3, 31, Disable);
 413   2        }
 414   1      
 415   1        if (TValue >= 100)
 416   1          ShowDigit(5, tbw, 0XC); //ï¿½ï¿½Î»ï¿½ï¿½Ê¾
 417   1        if (TValue >= 1000)
 418   1        {
 419   2          LCD_SetOnePixel(0, 10, Enable); //Ç§Î»ï¿½ï¿½Ê¾1
 420   2        }
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 8   

 421   1        LCD_SetOnePixel(0, 14, Enable); //ï¿½Â¶ï¿½ï¿½ï¿½Ê¾ï¿½ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½
 422   1      
 423   1        ShowDigit(9, hgw, 0);
 424   1        ShowDigit(8, hsw, 0);
 425   1        if (HValue >= 100)
 426   1        {
 427   2          LCD_SetOnePixel(0, 17, Enable);
 428   2        }
 429   1        LCD_SetOnePixel(0, 19, Enable);
 430   1        if (((180 < TValue) && (TValue <= 280)) && ((40 <= HValue) && (HValue <= 70)))
 431   1        {
 432   2          LCD_SetOnePixel(0, 9, Enable);
 433   2          LCD_SetOnePixel(0, 21, Disable);
 434   2          LCD_SetOnePixel(0, 31, Disable);
 435   2          LCD_SetOnePixel(1, 21, Enable);
 436   2        }
 437   1        if ((((120 < TValue) && (TValue <= 180)) || ((280 < TValue) && (TValue <= 320))) || ((25 < HValue) && (HV
             -alue <= 39)) || ((70 < HValue) && (HValue <= 85)))
 438   1        {
 439   2          LCD_SetOnePixel(0, 9, Disable);
 440   2          LCD_SetOnePixel(0, 21, Disable);
 441   2          LCD_SetOnePixel(1, 21, Enable);
 442   2          LCD_SetOnePixel(0, 31, Enable);
 443   2        }
 444   1        if (((TValue <= 120) || (320 < TValue)) || ((HValue <= 25)) || ((85 < HValue)))
 445   1        {
 446   2          LCD_SetOnePixel(0, 9, Disable);
 447   2          LCD_SetOnePixel(0, 21, Enable);
 448   2          LCD_SetOnePixel(0, 31, Disable);
 449   2          LCD_SetOnePixel(1, 21, Enable);
 450   2        }
 451   1      }
 452          
 453          void LCD_Display_TempHub(uint16_t TValue, uint16_t HValue)
 454          {
 455   1      
 456   1        // unsigned int  test_value;
 457   1        static unsigned int test_time;
 458   1      
 459   1        if (((Sys_MODE == Sys_MODE_BATPower) && (Is_InToSleep == True)) || (Sys_MODE == Sys_MODE_BATPowerLow))
 460   1        {
 461   2          LCD_SetAllPixels(Disable);
 462   2          return;
 463   2        }
 464   1        //
 465   1      
 466   1        if (GET_TempHub_Sta() == unstable)
 467   1        {
 468   2          test_time++;
 469   2          if (test_time <= 2)
 470   2          {
 471   3            TempHub_Display_On(TValue, HValue);
 472   3          }
 473   2          else if (test_time <= 4)
 474   2          {
 475   3            TempHub_Display_Off();
 476   3          }
 477   2          else
 478   2            test_time = 0;
 479   2        }
 480   1        else if (GET_TempHub_Sta() == stable)
 481   1        {
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 9   

 482   2          TempHub_Display_On(TValue, HValue);
 483   2        }
 484   1      
 485   1      #ifdef TEST_LCD
                test_time++;
                if (test_time == 2)
                {
                  test_value = GET_NtcTEMP();
                  LCD_SetOnePixel(0, 0, Enable);
                }
                else if (test_time == 4)
                {
                  test_value = GET_NtcTEMP();
                  LCD_SetOnePixel(1, 0, Enable);
                }
                else if (test_time == 6)
                {
                  test_value = GET_NtcTEMP();
                  LCD_SetOnePixel(2, 0, Enable);
                }
                else if (test_time == 8)
                {
                  test_value = GET_NtcTEMP();
                  LCD_SetOnePixel(3, 0, Enable);
                  test_time = 0;
                }
              
              #else
 510   1        // test_time++;
 511   1        if (test_time == 2)
 512   1        {
 513   2          LCD_SetOnePixel(0, 0, Enable);
 514   2        }
 515   1        else if (test_time == 4)
 516   1        {
 517   2      
 518   2          LCD_SetOnePixel(0, 0, Enable);
 519   2        }
 520   1        else if (test_time == 6)
 521   1        {
 522   2      
 523   2          LCD_SetOnePixel(0, 0, Enable);
 524   2        }
 525   1        else if (test_time == 8)
 526   1        {
 527   2      
 528   2          LCD_SetOnePixel(0, 0, Enable);
 529   2          // test_time=0;
 530   2        }
 531   1        LCD_SetOnePixel(0, 0, Enable);
 532   1        LCD_SetOnePixel(1, 0, Disable);
 533   1        LCD_SetOnePixel(2, 0, Disable);
 534   1        LCD_SetOnePixel(3, 0, Disable);
 535   1      
 536   1        Display_Co2(Get_Co2DisMod());
 537   1      
 538   1        // LCD_SetOnePixel(0, 0, Enable);
 539   1      #endif
 540   1        if (Get_Light_Sta() == Light_off)
 541   1        {
 542   2          LCD_SetOnePixel(0, 7, Disable);
 543   2        }
C51 COMPILER V9.60.0.0   LCD_USER                                                          11/11/2022 18:17:36 PAGE 10  

 544   1        else if (Get_Light_Sta() == Light_on)
 545   1        {
 546   2          LCD_SetOnePixel(0, 7, Enable);
 547   2        }
 548   1      
 549   1        if (Get_Bell_Sta() == Bell_off)
 550   1        {
 551   2          LCD_SetOnePixel(0, 24, Disable);
 552   2        }
 553   1        else if (Get_Bell_Sta() == Bell_on)
 554   1        {
 555   2          LCD_SetOnePixel(0, 24, Enable);
 556   2        }
 557   1      
 558   1        LCD_SetOnePixel(0, 1, Disable);
 559   1        LCD_SetOnePixel(2, 21, Enable);
 560   1        LCD_SetOnePixel(3, 21, Enable);
 561   1        LCD_SetOnePixel(2, 22, Enable);
 562   1        LCD_SetOnePixel(3, 22, Enable);
 563   1      
 564   1        Bat_PowerDisplay();
 565   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2459    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
